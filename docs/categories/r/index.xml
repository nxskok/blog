<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Ken&#39;s Blog</title>
    <link>/categories/r/</link>
    <description>Recent content in R on Ken&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 30 Jan 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tidy simple effects in analysis of variance</title>
      <link>/2018/01/30/tidy-simple-effects-in-analysis-of-variance/</link>
      <pubDate>Tue, 30 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/01/30/tidy-simple-effects-in-analysis-of-variance/</guid>
      <description>Introduction In two-way analysis of variance, the (continuous) response variable depends on two explanatory factors, say A and B. These factors might have an additive effect, in which case you can talk unambiguously about “the effect of factor A”, but the effect of factor A might be different depending on what level of factor B you are looking at. In that case, factors A and B are said to have an interaction.</description>
    </item>
    
    <item>
      <title>Displaying grouped bar charts in ggplot</title>
      <link>/2018/01/20/displaying-grouped-bar-charts-in-ggplot/</link>
      <pubDate>Sat, 20 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/01/20/displaying-grouped-bar-charts-in-ggplot/</guid>
      <description>Introduction When you have two categorical variables to plot, grouped bar charts are one possible visualization. I learned something new about them today, from Hadley Wickham himself (well, via a tweet, anyway).
As an example, let’s use some data from the Australian Institute for Sport:
library(tidyverse) ## ── Attaching packages ─────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse 1.2.1 ── ## ✔ ggplot2 2.2.1.9000 ✔ purrr 0.2.4 ## ✔ tibble 1.4.1 ✔ dplyr 0.7.4 ## ✔ tidyr 0.</description>
    </item>
    
    <item>
      <title>Installing R 3.4 on your Android phone</title>
      <link>/2017/12/30/installing-r-3-4-on-your-android-phone/</link>
      <pubDate>Sat, 30 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/12/30/installing-r-3-4-on-your-android-phone/</guid>
      <description>Introduction David Selby, on his blog, explains how to get R up and running on your Android phone (and, by way of proof, wrote the blog post concerned on his phone). Unfortunately, however, he was only able to install R 3.1.1, which means that some of the latest tidyverse goodies are not available. Can we do better? It is possible. Maybe.
 Installation on the Android phone We begin by installing two Android apps, which can both be found on Google Play.</description>
    </item>
    
    <item>
      <title>Tidying weather data</title>
      <link>/2017/11/23/tidying-weather-data/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/11/23/tidying-weather-data/</guid>
      <description>Introduction Weather data often comes in an untidy format that is suitable for looking at, but not so suitable for doing any kind of analysis with. Let’s have a look at the kind of thing I mean. But before we do that, we need a package or two:
library(tidyverse) ## ── Attaching packages ─────────────────────────────────────────────────────────────────────────── tidyverse 1.2.1 ── ## ✔ ggplot2 2.2.1 ✔ purrr 0.2.4 ## ✔ tibble 1.3.4 ✔ dplyr 0.</description>
    </item>
    
    <item>
      <title>Chuff chuff: using rvest with web forms</title>
      <link>/2017/11/20/chuff-chuff-using-rvest-with-web-forms/</link>
      <pubDate>Mon, 20 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/11/20/chuff-chuff-using-rvest-with-web-forms/</guid>
      <description>Introduction We are very accustomed to journey planners that help us navigate across the city, the country or the world. Google’s transit directions are an example: you enter a start and an end point, and it tells you which vehicles to get and where to transfer to another one. Nowadays, this is a commonplace. But back in 1989, the idea of “shortest path” was an idea in the minds of graph theorists, not a practical way to get from one place to another.</description>
    </item>
    
    <item>
      <title>Scraping Manhattan with rvest</title>
      <link>/2017/09/18/scraping-a-bar-chart-with-rvest/</link>
      <pubDate>Mon, 18 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/09/18/scraping-a-bar-chart-with-rvest/</guid>
      <description>Introduction In cricket, a Manhattan chart records how many runs a team score in each over (and how many wickets fall). An example is here (scroll down to find it). Is it possible to extract the numbers of runs and wickets for each team from this graph?
The answer turns out to be “yes”, because this graph is an SVG graphic, and the data used to create it is embedded in the HTML code, so it is “simply” a matter of pulling it out.</description>
    </item>
    
    <item>
      <title>Safely, possibly</title>
      <link>/2017/09/07/safely-possibly/</link>
      <pubDate>Thu, 07 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/09/07/safely-possibly/</guid>
      <description>Introduction You know how, when you’re reading documentation, you nod sagely as you read some part, but when you come back to it later, you realize that you really don’t understand it at all. This happened to me with the purrr documentation. I mean, I could manage map and some of its variants, but when it came down to it, I really had no clue about safely and possibly. Until today, when I actually had a reason to study them.</description>
    </item>
    
    <item>
      <title>A brief foray into list-columns</title>
      <link>/2017/07/25/a-brief-foray-into-list-columns/</link>
      <pubDate>Tue, 25 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/07/25/a-brief-foray-into-list-columns/</guid>
      <description>Introduction Let’s suppose we are trying to find the median of a bunch of binomial distributions. ⊕This is a simplified version of an actual problem I had, but that one fails for some unconnected (and thus far unknown) reason, so I don’t want to show you that.
To be specific, let’s suppose we have these values of \(n\):
n=c(10,15,20) and these values of \(p\):
p=c(0.25,0.3,0.42) We’ll need the tidyverse, as usual:</description>
    </item>
    
    <item>
      <title>The Designated Hitter</title>
      <link>/2017/06/08/the-designated-hitter/</link>
      <pubDate>Thu, 08 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/06/08/the-designated-hitter/</guid>
      <description>Back in 1973, when the American League introduced the Designated Hitter rule, they were worried (among other things) about their league having fewer runs per game than the rival National League. So they introduced a rule whereby the pitcher (or any other nominated player) no longer had to bat, to be replaced by a player, the Designated Hitter, whose only job was to bat. Did that have the desired effect of increasing the total number of runs scored, compared to the National League, which has never had a Designated Hitter?</description>
    </item>
    
    <item>
      <title>Carter and Guthrie</title>
      <link>/2017/06/01/carter-and-guthrie/</link>
      <pubDate>Thu, 01 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/06/01/carter-and-guthrie/</guid>
      <description>Introduction Carter and Guthrie, in 2004, proposed a method of modelling cricket matches. Their aim was to provide an alternative method of deciding interrupted matches, in the manner of Duckworth and Lewis. What was interesting to me is that they estimate a probability of winning (which is then held fixed over interruptions), and it seemed to me that one could estimate and update the probability of winning as the game progresses, which would be a useful adjunct for spectators.</description>
    </item>
    
    <item>
      <title>Carter and Guthrie part 2: model-building</title>
      <link>/2017/06/01/carter-and-guthrie-part-2-model-building/</link>
      <pubDate>Thu, 01 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/06/01/carter-and-guthrie-part-2-model-building/</guid>
      <description>Estimating the parameters Start, as ever, with the tidyverse, along with MASS for modelling later:
library(MASS) library(tidyverse) ## Loading tidyverse: ggplot2 ## Loading tidyverse: tibble ## Loading tidyverse: tidyr ## Loading tidyverse: readr ## Loading tidyverse: purrr ## Loading tidyverse: dplyr ## Conflicts with tidy packages ---------------------------------------------- ## filter(): dplyr, stats ## lag(): dplyr, stats ## select(): dplyr, MASS The model The Carter and Guthrie model is a simplified version of cricketing reality, thus:</description>
    </item>
    
  </channel>
</rss>