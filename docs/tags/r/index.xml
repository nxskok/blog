<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on R, it&#39;s OK I guess</title>
    <link>/tags/r/</link>
    <description>Recent content in R on R, it&#39;s OK I guess</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 23 Feb 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Making a lot of plots all at once, the tidyverse way</title>
      <link>/2018/02/23/making-a-lot-of-plots-all-at-once-the-tidyverse-way/</link>
      <pubDate>Fri, 23 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/02/23/making-a-lot-of-plots-all-at-once-the-tidyverse-way/</guid>
      <description>Introduction I was thinking the other day about how you might come up with a bunch of separate-but-related plots, without plotting them one by one, for example to show a class.
By way of example, suppose we want to plot a number of Poisson distributions with different means, so that we can compare their shapes. The textbook says that a Poisson with a large mean is “approximately normal”, but that is just words until you see it on a picture.</description>
    </item>
    
    <item>
      <title>Histograms and bins</title>
      <link>/2017/06/08/histograms-and-bins/</link>
      <pubDate>Thu, 08 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/06/08/histograms-and-bins/</guid>
      <description>Most software, when you ask it to draw you a histogram, will choose a number of intervals (“bins”) for you. Base R is one of those. To illustrate, let’s read in some data:
library(tidyverse) ## ── Attaching packages ──────────────────────────────────────────────────────────────────── tidyverse 1.2.1 ── ## ✔ ggplot2 2.2.1.9000 ✔ purrr 0.2.4 ## ✔ tibble 1.4.2 ✔ dplyr 0.7.4 ## ✔ tidyr 0.8.0 ✔ stringr 1.3.0 ## ✔ readr 1.1.1 ✔ forcats 0.3.0 ## ── Conflicts ─────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ── ## ✖ dplyr::filter() masks stats::filter() ## ✖ dplyr::lag() masks stats::lag() myurl=&amp;quot;http://www.</description>
    </item>
    
    <item>
      <title>The Designated Hitter</title>
      <link>/2017/06/08/the-designated-hitter/</link>
      <pubDate>Thu, 08 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/06/08/the-designated-hitter/</guid>
      <description>Back in 1973, when the American League introduced the Designated Hitter rule, they were worried (among other things) about their league having fewer runs per game than the rival National League. So they introduced a rule whereby the pitcher (or any other nominated player) no longer had to bat, to be replaced by a player, the Designated Hitter, whose only job was to bat. Did that have the desired effect of increasing the total number of runs scored, compared to the National League, which has never had a Designated Hitter?</description>
    </item>
    
    <item>
      <title>Odd sums</title>
      <link>/2017/05/31/odd-sums/</link>
      <pubDate>Wed, 31 May 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/05/31/odd-sums/</guid>
      <description>While waiting for my coffee at work this morning, I was leafing through a recreational mathematics journal. It said, “the numbers 1–9 are arranged at random in a 3 by 3 matrix. What is the probability that the row sums and column sums are all odd?”
Well, I thought, that ought to be easy enough to simulate. Randomly shuffle the numbers 1–9 using sample, and then insert them into a matrix with three columns.</description>
    </item>
    
    <item>
      <title>Add-in</title>
      <link>/2017/05/22/add-in/</link>
      <pubDate>Mon, 22 May 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/05/22/add-in/</guid>
      <description>I just discovered a couple of things:
an R Studio add-in called CRANsearcher that, when you run it, prompts you for search terms and searches the whole of CRAN for anything that matches those search terms. (Thanks to @juliasilge on Twitter for this.) To install:  devtools::install_github(&amp;quot;RhoInc/CRANsearcher&amp;quot;) This inspired me to see what else was on my AddIns menu in R Studio. I also found options for creating a new blog post and “serving the site” so I can preview it.</description>
    </item>
    
    <item>
      <title>Welch analysis of variance</title>
      <link>/2017/05/19/welch-analysis-of-variance/</link>
      <pubDate>Fri, 19 May 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/05/19/welch-analysis-of-variance/</guid>
      <description>Introduction The standard analysis of variance based on the \(F\)-test has two major assumptions:
Normally distributed data Equal variance within each group.  The analysis can handle a certain amount of non-normality, but the equal-variance assumption is important because it is required for the idea of “an” error variance to make sense (that is what the error mean square is estimating).
Is it possible to make an ANOVA that can allow for the groups to have different variances?</description>
    </item>
    
    <item>
      <title>Making scatterplots against multiple explanatory variables</title>
      <link>/2017/05/16/making-scatterplots-against-multiple-explanatory-variables/</link>
      <pubDate>Tue, 16 May 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/05/16/making-scatterplots-against-multiple-explanatory-variables/</guid>
      <description>Introduction An R post here.
I wanted to share something about drawing scatterplots against many variables at once, using gather, ggplot and facet_wrap from the tidyverse.
First we need to load the tidyverse:
library(tidyverse) ## Loading tidyverse: ggplot2 ## Loading tidyverse: tibble ## Loading tidyverse: tidyr ## Loading tidyverse: readr ## Loading tidyverse: purrr ## Loading tidyverse: dplyr ## Conflicts with tidy packages ---------------------------------------------- ## filter(): dplyr, stats ## lag(): dplyr, stats  Gather Let’s start with gather.</description>
    </item>
    
  </channel>
</rss>