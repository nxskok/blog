<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>#Rstats on Ken&#39;s Blog</title>
    <link>/tags/#rstats/</link>
    <description>Recent content in #Rstats on Ken&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 16 Dec 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/#rstats/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Testing for time trend</title>
      <link>/2017/12/16/testing-for-time-trend/</link>
      <pubDate>Sat, 16 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/12/16/testing-for-time-trend/</guid>
      <description>Introduction One of the things my environmental science colleagues spend much of their time doing is assessing whether something is changing over time. Most commonly, the depressing conclusion from one of their investigations is “climate change”. One of the studies I was part of concerned temporal trends in sea ice in Hudson Bay. We will see some of that data later on.
There are two major tools that environmental scientists typically use to assess trend:</description>
    </item>
    
    <item>
      <title>Chuff chuff: using rvest with web forms</title>
      <link>/2017/11/20/chuff-chuff-using-rvest-with-web-forms/</link>
      <pubDate>Mon, 20 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/11/20/chuff-chuff-using-rvest-with-web-forms/</guid>
      <description>Introduction We are very accustomed to journey planners that help us navigate across the city, the country or the world. Google’s transit directions are an example: you enter a start and an end point, and it tells you which vehicles to get and where to transfer to another one. Nowadays, this is a commonplace. But back in 1989, the idea of “shortest path” was an idea in the minds of graph theorists, not a practical way to get from one place to another.</description>
    </item>
    
    <item>
      <title>Scraping Manhattan with rvest</title>
      <link>/2017/09/18/scraping-a-bar-chart-with-rvest/</link>
      <pubDate>Mon, 18 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/09/18/scraping-a-bar-chart-with-rvest/</guid>
      <description>Introduction In cricket, a Manhattan chart records how many runs a team score in each over (and how many wickets fall). An example is here (scroll down to find it). Is it possible to extract the numbers of runs and wickets for each team from this graph?
The answer turns out to be “yes”, because this graph is an SVG graphic, and the data used to create it is embedded in the HTML code, so it is “simply” a matter of pulling it out.</description>
    </item>
    
    <item>
      <title>A brief foray into list-columns</title>
      <link>/2017/07/25/a-brief-foray-into-list-columns/</link>
      <pubDate>Tue, 25 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/07/25/a-brief-foray-into-list-columns/</guid>
      <description>Introduction Let’s suppose we are trying to find the median of a bunch of binomial distributions. ⊕This is a simplified version of an actual problem I had, but that one fails for some unconnected (and thus far unknown) reason, so I don’t want to show you that.
To be specific, let’s suppose we have these values of \(n\):
n=c(10,15,20) and these values of \(p\):
p=c(0.25,0.3,0.42) We’ll need the tidyverse, as usual:</description>
    </item>
    
    <item>
      <title>Summarizing several models using broom and purrr</title>
      <link>/2017/07/20/summarizing-several-models-using-broom-and-purrr/</link>
      <pubDate>Thu, 20 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/07/20/summarizing-several-models-using-broom-and-purrr/</guid>
      <description>Introduction broom is supposed to be a powerful way to summarize several models at once, and so it is. The trouble is, the examples show how to fit the same model to different subsets of a data set. I had something different in mind: I had one data set, and three different models on that same data. Could I do something similar there? It wasn’t clear to me how.
 Illustrative data The data here came from Albright’s book.</description>
    </item>
    
  </channel>
</rss>